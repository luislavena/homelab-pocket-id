---
name: example

services:
  pocketid:
    build:
      context: ..
    depends_on:
      replica1:
        condition: service_healthy
      replica2:
        condition: service_healthy
    environment:
      # Ref: https://pocket-id.org/docs/configuration/environment-variables
      - APP_URL=https://id.example.local
      - ENCRYPTION_KEY=some-random-bytes
      # FIXME: Disable UI config does not correctly set APP_NAME (appName)
      # - UI_CONFIG_DISABLED=true
      # - APP_NAME="SSO"
      # - EMAILS_VERIFIED=true
      # - ALLOW_OWN_ACCOUNT_EDIT=false
      # Replica 1
      - REPLICA1_BUCKET=mybackup
      - REPLICA1_ENDPOINT=http://replica1:9000
      - REPLICA1_REGION=auto
      - REPLICA1_ACCESS_KEY_ID=keyid
      - REPLICA1_SECRET_ACCESS_KEY=secretkey
      # Replica 2
      - REPLICA2_BUCKET=mybackup
      - REPLICA2_ENDPOINT=http://replica2:9000
      - REPLICA2_REGION=auto
      - REPLICA2_ACCESS_KEY_ID=keyid
      - REPLICA2_SECRET_ACCESS_KEY=secretkey
    healthcheck:
      test: ["CMD", "/app/pocket-id", "healthcheck"]
      interval: 1m30s
      timeout: 5s
      retries: 2
      start_period: 10s
    labels:
      # Ref: https://docs.orbstack.dev/docker/domains#custom
      - dev.orbstack.domains=id.example.local
      # Ref: https://docs.orbstack.dev/docker/domains#ports
      - dev.orbstack.http-port=1411
    ports:
      - "1411:1411"
    volumes:
      - pocketid:/app/data

  replica1: &replica
    image: registry.docker.com/bitnami/minio:latest
    environment:
      - MINIO_ROOT_USER=keyid
      - MINIO_ROOT_PASSWORD=secretkey
      - MINIO_DEFAULT_BUCKETS=mybackup
      - MINIO_SCHEME=http
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - replica1:/bitnami/minio/data

  replica2:
    <<: *replica
    volumes:
      - replica2:/bitnami/minio/data

volumes:
  pocketid:
    driver: local
  replica1:
    driver: local
  replica2:
    driver: local
